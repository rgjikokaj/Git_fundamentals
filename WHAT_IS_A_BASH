Explain in your own words what is Bash?
A history of Bash. Like with anything, we should start at the beginning of It. The date is Sunday, January 10, 1988, when the bash system was born. The leading creator of the Bash system was a person by the name of Brain Fox; he created the Bash system for use in the GNU project, he contributes the name Bourne Again shell to Steve Bourne's earlier system, hence the name (Bash). It's a slight tangent, but I need to explain the GNU project because it relates to Bash, so here goes.  The project's goal was to give each computer user freedom and control in their use of their computers and other devices by collaboratively developing and publishing software that provides everyone the right to run the software freely. The bash system is a Unix shell, also known as a command-line interpreter that provides a command-line user interface for operating systems such as Mac, the laptop I am using. The bash system hides the details of the underlying operating system and manages the technical details. In Bash which is a type of operating systems, users typically have many choices of command-line interpreters for interactive sessions. When a computer user tries to log into the bash system, a shell program is automatically executed for the session duration when a user logs in to the system interactively. To sum it all up, what bash is, is a command processor that allows users to issue commands that carry out various actions. These commands can be combined within a file and are known as scripts. If you want to verify that you are using the Bash shell, this can be achieved by simply issuing the command "echo $SHELL" from the command line. And that is Bash in a nutshell.

Explain what is the terminal?
When we think of a terminal, the first thing that comes to mind is my terminal app. When I pull the terminal app, it lets me send commands to my computer, and in turn, all you need is a monitor and a keyboard, and you have access to a terminal. What is the purpose of a terminal if not to process information like a typical computer? Still, to send commands to another system. I curiously wanted to learn where the word terminal came from. Surprisingly, I found out that the word terminal comes from early computer systems that send commands to other computers. Terminals allow the users to accomplish and automate the tedious tasks on a user's computer without the use of a graphical user interface. This Will enable us to send simple text commands to our computer to do things like navigate through a directory or copy a file and form the basis for many more complex automation and programming skills. When it comes to present-day computers, terminal refers to a terminal program or app, which provides a text-based interface for typing commands. Nowadays, most if not all computing platforms are typically included with the terminal inside the operating system.

Explain in your own words what are Bash commands:

As stated in the module, A bash command is the smallest unit of code that bash can independently execute. These commands tell bash what we need it to do. Bash generally takes in a single command from a user and returns to the user once the command has been executed. Some of the bash commands are pwd which means to print out the working directory, or the place you are in the shell directory. The next thing you want to do is type ls, and it stands for a list, and the function of said ls is to list the contents of files. The following command would be the command to change directory or cd, which changes directory simple enoughâ€”echo command prints out text in the terminal window. The following command would be touch, used to create new files, but it can also be used to change the timestamps on files and/or directories. The following command would be mkdir is a helpful command you can use to create directories. Any number of directories can be made simultaneously, which can significantly speed up the process. The bash command labeled man command is your manual and is very useful when figuring out what a command does. The mv is used to move or rename directories. Without this command, you would have to rename each tedious file individually. Mv command allows you to do batch file renaming, which can save you loads of time. these are just some of the bash commands that I found useful I am sure that there are loads more, and I am finding of them each new day.

Explain why is the terminal essential?

I would love to add the little descriptions of the Terminal that was produced in the Module six. The Terminal is a program that is used to interact with a shell. It is just an interface to the Shell and to the other command-line programs that run inside it. This is akin to how a web browser is an interface to websites. Judging by this apparent simple explanation of the Terminal provided in the module, it can be concluded that it is essential to the computing process. The Terminal provides an efficient interface to access the true power of a computer better than any graphical interface. What else makes the terminal essential. Let us see a terminal is and not so simply a text-based computer interface to the user. The user can type commands, manipulate files, execute programs, and open documents in a terminal. All the commands that I described previously, and their function are easily used in a terminal, which opens a different way to navigate the directory in your computer. As a programmer, the Terminal and its use should be like walking, second nature. As I stated before, The Terminal grants you access to your computer's file and folder structure the same way you navigate through Safari or Chrome. You navigate using your keyboard in the Terminal. It can take some hours or days or even weeks to get used to the Terminal, although developing your mental capacity in this area is foundational to working in code. 

Explain Bash piping?

To start with, A pipe is an enclosed medium that allows flow from one end to another. When a command in the bash system sends its output to a pipe according to the reading of Module six, the receiving end for that output is another command, not a file. A pipe is a vertical character(|) with or without the symbol(&) character in bash. With the power of both of the characters combined, we have the control operators for pipelines, (| and |&).  a pipe is a particular file that connects the output of one process to the input of another process. A pipeline may begin with time which can report the runtime after the completion of the pipeline. Some examples include the cat command; when used to view a file that spans multiple pages, it jumps quickly to the last page of the file. You can not view the material in the middle of the file now. If you want not to have the said problem, you can pipe the cat command's output to less, and this will show you only one scroll length of the content at a time. Another example would be that suppose you want to search particular info the postal code from a text file. One way to do it is manually skim the content to trace the information, although that task is tedious and we are programmers. Therefore, we can find a better way. If we use the grep command, it will scan the document for any desired information and present the result in the format you want. Bash piping makes it easier for a programmer to program.




