In your own words explain at its core what a computer really is whenever you type a letter on a keyboard?(250 words)

	The CPU translates the signal using the program for the keyboard which is a driver for your keyboard. This signal gets translated into code for a key that we pressed. This is then passed to the program for display which translates into a format for the monitor. And finally, a monitor shows the letter. Once you press a key in the keyboard for example then the computer will try getting the stored information which is located in a hard drive, a hard drive is the hardware component that stores all of your digital content. Your documents, pictures, music, videos, programs, application preferences, and operating system represent digital content stored on a hard drive. Hard drives can be external or internal. The basic of memory human or machine is to keep a record of information for a period. The next is processing the memory Using the central processing unit (which is the portion of a computer that retrieves and executes instructions the CPU is often simply referred to as the processor). The step before the last step to producing the output coincidentally is called the output in which Any information that is processed by and sent out from a computer or other electronic device is considered output. As the end result, you will see it on your monitor or screen whichever you prefer to call it. The last step would be the pixels on the monitor that displays the said finished work. To sum it up When any key on a keyboard is pressed, it needs to be converted into a binary number so that it can be processed by the computer and the typed character can appear on the screen. Although I am only scratching the surface of the inner working of said process.

Explain in your own words what are the uses of Docker? (300 words)

	Docker is an open platform for developing, shipping, and running applications. Docker enables you to separate your applications from your infrastructure so you can deliver software quickly. With Docker, you can manage your infrastructure in the same ways you manage your applications. By taking advantage of Docker’s methodologies for shipping, testing, and deploying code quickly, you can significantly reduce the delay between writing code and running it in production.
Docker provides the ability to package and run an application in a loosely isolated environment called a container. The isolation and security allow you to run many containers simultaneously on a given host. Containers are lightweight and contain everything needed to run the application, so you do not need to rely on what is currently installed on the host. You can easily share containers while you work and be sure that everyone you share with gets the same container that works in the same way.

Explain why is docker recommended (200 words)
	
	Containers work a little like VMs, but in a far more specific and granular way. They isolate a single application and its dependencies all the external software libraries the app requires to run both from the underlying operating system and from other containers. All the containerized apps share a single, common operating system (either Linux or Windows), but they are compartmentalized from one another and from the system at large. The benefits of Docker containers show up in many places. Here are some of the major advantages of Docker and containers. Instances of containerized apps use far less memory than virtual machines, they start up and stop more quickly, and they can be packed far more densely on their host hardware. All of this amounts to less spending on IT. The cost savings will vary depending on what apps are in play and how resource-intensive they may be, but containers invariably work out as more efficient than VMs. It’s also possible to save on costs of software licenses because you need many fewer operating system instances to run the same workloads.

Explain what are the main features of Docker (250 words)
	
	It is one of the key features of Docker that helps you in configuring the system in a faster and easier manner. Due to this feature, codes can be deployed in less time and with fewer efforts. The infrastructure is not linked with the environment of the application as Docker is used with a wide variety of environments. Docker provides containers that are used to run applications in an isolated environment. Since each container is independent, Docker can execute any kind of application. It helps in increasing productivity by easing up the technical configuration and rapidly deploying applications. Moreover, it not only provides an isolated environment to execute applications, but it reduces the resources as well. Services is a list of tasks that specifies the state of a container inside a cluster. Each task in the Services lists one instance of a container that should be running, while Swarm schedules them across the nodes. It saves secrets into the swarm and chooses to give services access to certain secrets, including a few important commands to the engine such as secret inspect, secret create, etc.
